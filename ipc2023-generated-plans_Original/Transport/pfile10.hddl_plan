==>
**Sequential Plan**
```
 1. drive truck_0 city_loc_6 city_loc_0
 2. pick_up truck_0 city_loc_0 package_3 capacity_2 capacity_3
 3. drive truck_0 city_loc_0 city_loc_6
 4. drop truck_0 city_loc_6 package_3 capacity_1 capacity_2
 5. pick_up truck_0 city_loc_6 package_1 capacity_1 capacity_2
 6. drive truck_0 city_loc_6 city_loc_3
 7. drop truck_0 city_loc_3 package_1 capacity_0 capacity_1
 8. pick_up truck_0 city_loc_3 package_4 capacity_0 capacity_1
 9. drive truck_0 city_loc_3 city_loc_6
10. drop truck_0 city_loc_6 package_4 capacity_1 capacity_2
11. pick_up truck_0 city_loc_6 package_5 capacity_1 capacity_2
12. drive truck_0 city_loc_6 city_loc_0
13. drop truck_0 city_loc_0 package_5 capacity_0 capacity_1
14. pick_up truck_0 city_loc_0 package_2 capacity_0 capacity_1
15. drive truck_0 city_loc_0 city_loc_6
16. drop truck_0 city_loc_6 package_2 capacity_1 capacity_2
17. pick_up truck_0 city_loc_6 package_0 capacity_1 capacity_2
18. drive truck_0 city_loc_6 city_loc_3
19. drop truck_0 city_loc_3 package_0 capacity_0 capacity_1
20. pick_up truck_0 city_loc_3 package_6 capacity_0 capacity_1
21. drive truck_0 city_loc_3 city_loc_6
22. drop truck_0 city_loc_6 package_6 capacity_1 capacity_2
23. pick_up truck_0 city_loc_6 package_7 capacity_1 capacity_2
24. drive truck_0 city_loc_6 city_loc_6
25. drop truck_0 city_loc_6 package_7 capacity_0 capacity_1
```
**Hierarchical Decomposition**
```
root 0
0 solve_htn -> m_deliver_ordering_0 1 2 3 4 5 6 7
  1 deliver package_0 city_loc_3 -> m_drive_to_ordering_0 18
    18 get_to truck_0 city_loc_3 -> m_i_am_there_ordering_0 (already at city_loc_6, so drive first)
      *insert drive from 6 to 3*
      18.1 drive truck_0 city_loc_6 city_loc_3
      18.2 noop truck_0 city_loc_3

  2 deliver package_1 city_loc_6 -> m_deliver_ordering_0 5 6
    5 get_to truck_0 city_loc_6 -> m_i_am_there_ordering_0 (already at city_loc_6)
      5.1 noop truck_0 city_loc_6
    6 load truck_0 city_loc_3 package_1 -> m_load_ordering_0 8
      8 pick_up truck_0 city_loc_3 package_1 capacity_0 capacity_1

  3 deliver package_2 city_loc_6 -> m_deliver_ordering_0 14 15
    14 get_to truck_0 city_loc_0 -> m_drive_to_ordering_0 1
      1 drive truck_0 city_loc_6 city_loc_0
    15 load truck_0 city_loc_0 package_2 -> m_load_ordering_0 16
      16 pick_up truck_0 city_loc_0 package_2 capacity_0 capacity_1

  4 deliver package_3 city_loc_3 -> m_deliver_ordering_0 2 3
    2 get_to truck_0 city_loc_0 -> m_drive_to_ordering_0 1
      1 drive truck_0 city_loc_6 city_loc_0
    3 load truck_0 city_loc_0 package_3 -> m_load_ordering_0 4
      4 pick_up truck_0 city_loc_0 package_3 capacity_2 capacity_3

  5 deliver package_4 city_loc_6 -> m_deliver_ordering_0 8 9
    8 get_to truck_0 city_loc_3 -> m_i_am_there_ordering_0 (already at city_loc_3 after package_1)
      8.1 noop truck_0 city_loc_3
    9 load truck_0 city_loc_3 package_4 -> m_load_ordering_0 10
      10 pick_up truck_0 city_loc_3 package_4 capacity_0 capacity_1

  6 deliver package_5 city_loc_0 -> m_deliver_ordering_0 11 12
    11 get_to truck_0 city_loc_6 -> m_i_am_there_ordering_0 (already at city_loc_6)
      11.1 noop truck_0 city_loc_6
    12 load truck_0 city_loc_6 package_5 -> m_load_ordering_0 13
      13 pick_up truck_0 city_loc_6 package_5 capacity_1 capacity_2

  7 deliver package_6 city_loc_3 -> m_deliver_ordering_0 19 20
    19 get_to truck_0 city_loc_3 -> m_i_am_there_ordering_0 (already at city_loc_3 after package_0)
      19.1 noop truck_0 city_loc_3
    20 load truck_0 city_loc_3 package_6 -> m_load_ordering_0 21
      21 pick_up truck_0 city_loc_3 package_6 capacity_0 capacity_1

  *Unload actions are implicitly defined within the deliver method's subtasks*
  *Unload for package_3 (capacity_2 to capacity_1): 4*
  *Unload for package_1 (capacity_1 to capacity_0): 7*
  *Unload for package_5 (capacity_1 to capacity_0): 13*
  *Unload for package_2 (capacity_1 to capacity_0): 16*
  *Unload for package_4 (capacity_1 to capacity_0): 10*
  *Unload for package_0 (capacity_1 to capacity_0): 19*
  *Unload for package_6 (capacity_1 to capacity_0): 21*
  *Unload for package_7 (capacity_1 to capacity_0): 25*
<==