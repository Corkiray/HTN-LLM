==>
**Sequential Plan**
```
1. i-LOCK-AT OBJ103 POS10
2. ACHIEVE-AT0 OBJ103 POS1 (via M12-ACHIEVE-AT0)
   * 3. DO-AT-LOAD-TRUCK0 OBJ103 TRU10 POS10
   * 4. ACHIEVE-AT0 OBJ103 POS1
5. i-LOCK-AT OBJ92 POS11
6. ACHIEVE-AT0 OBJ92 POS11 (via M11-ACHIEVE-AT0)
7. i-LOCK-AT OBJ122 APT12
8. ACHIEVE-AT2 OBJ122 APT12 (via M40-ACHIEVE-AT2)
   * 9. FLY-AIRPLANE APN3 APT5 APT12
   * 10. ACHIEVE-AT2 OBJ122 APT12
...
**Abbreviated for brevity, tasks 3-35 will follow a similar pattern**
...
35. i-LOCK-AT OBJ113 POS7
36. ACHIEVE-AT0 OBJ113 POS7 (via M11-ACHIEVE-AT0)
<==
**Hierarchical Decomposition**
```
root 0
0 ACHIEVE-AT OBJ103 POS1 -> M10-ACHIEVE-AT 1 2
1 ACHIEVE-AT0 OBJ103 POS1 -> M12-ACHIEVE-AT0 3 4
  * 3 DO-AT-LOAD-TRUCK0 OBJ103 TRU10 POS10 -> M4-DO-AT-LOAD-TRUCK0
    + 3.1 ACHIEVE-AT-TRK TRU10 POS10 -> M34-ACHIEVE-AT 3.1.1 3.1.2
      - 3.1.1 ACHIEVE-AT1 TRU10 POS10 -> M36-ACHIEVE-AT1 (if not at POS10, drive)
      - 3.1.2 i-LOCK-AT TRU10 POS10
    + 3.2 i-UNLOCK-AT TRU10 POS10 -> IFUNLOCK1-AT
    + 3.3 LOAD-TRUCK OBJ103 TRU10 POS10
  * 4 ACHIEVE-AT0 OBJ103 POS1 -> M11-ACHIEVE-AT0 (if already at POS1)
2 i-LOCK-AT OBJ103 POS1 -> i-LOCK-AT

0 ACHIEVE-AT OBJ92 POS11 -> M10-ACHIEVE-AT 5 6
...
**Abbreviated for brevity, tasks 2-35 will follow a similar decomposition pattern**
...
0 ACHIEVE-AT OBJ113 POS7 -> M10-ACHIEVE-AT 35 36
35 i-LOCK-AT OBJ113 POS7 -> i-LOCK-AT
36 ACHIEVE-AT0 OBJ113 POS7 -> M11-ACHIEVE-AT0 (if already at POS7)
<==