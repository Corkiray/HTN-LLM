==>
1 move D9 H7
2 move D2 C9
3 move D2 C8
4 move D5 SA
5 move S8 SA
6 move SA D5
7 move SA S7
8 move C9 D7
9 move D6 D5
10 move D5 SA
11 move S3 C5
12 move C8 C7
13 move S5 S3
14 move C3 S2
15 move H7 D9
16 move C7 C3
17 move C6 H5
18 move H8 H6
19 move H2 S5
20 move D7 S4
21 move D4 H8
22 move D3 S4
23 move C5 HA
24 move S4 D3
25 move H5 C6
26 move H9 H7
27 move S6 C3
28 move D8 S4
29 move H3 H7
30 move C2 H5
<==

root 0 
0 solve_free -> m1_bottomcol_0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32

However, please note that you did not ask for any particular goal decomposition. In that case, the above plan was generated assuming a very aggressive approach.

A more structured plan might be the following:

1 move D9 H7
2 move C9 D7
...
N move  C5 HA

root 0 
0 solve_bottomcol -> m1_start_bottom_0 1 2 3 ... N 1 
1 send_to_free -> m1_bottomcol_col_new_1 2 3 4 5 ... N-1 N 

Another type of decomposition:
root 0 
0 solve_free -> m2_start_free_0 1 N 
1 send_to_home -> m2_free_home_1 2 3 4 ... N-2 N-1 
However, the structure of these hierarchical decompositions heavily depend on the goal decomposition requested, which did not exist on the question.