==>
**Sequential Plan**
1. drive truck_0 city_loc_4 city_loc_3
2. pick_up truck_0 city_loc_3 package_2 capacity_2 capacity_3
3. drive truck_0 city_loc_3 city_loc_2
4. drop truck_0 city_loc_2 package_2 capacity_1 capacity_2
5. drive truck_0 city_loc_2 city_loc_3
6. pick_up truck_0 city_loc_3 package_1 capacity_2 capacity_3
7. drive truck_0 city_loc_3 city_loc_1
8. drop truck_0 city_loc_1 package_1 capacity_1 capacity_2
9. drive truck_0 city_loc_1 city_loc_8
10. pick_up truck_0 city_loc_8 package_4 capacity_2 capacity_3
11. drive truck_0 city_loc_8 city_loc_1
12. drop truck_0 city_loc_1 package_4 capacity_1 capacity_2
13. drive truck_0 city_loc_1 city_loc_10
14. pick_up truck_0 city_loc_10 package_5 capacity_2 capacity_3
15. drive truck_0 city_loc_10 city_loc_1
16. drop truck_0 city_loc_1 package_5 capacity_1 capacity_2
17. drive truck_1 city_loc_13 city_loc_4
18. pick_up truck_1 city_loc_4 package_3 capacity_2 capacity_3
19. drive truck_1 city_loc_4 city_loc_13
20. drop truck_1 city_loc_13 package_3 capacity_1 capacity_2
21. drive truck_0 city_loc_1 city_loc_11
22. pick_up truck_0 city_loc_11 package_0 capacity_2 capacity_3
23. drive truck_0 city_loc_11 city_loc_2
24. drop truck_0 city_loc_2 package_0 capacity_1 capacity_2

**Hierarchical Decomposition**
root 0
0 solve_htn -> m_deliver_ordering_0 1 2 3 4 5
1 deliver package_0 city_loc_2 -> m_drive_to_ordering_0 21, m_load_ordering_0 22, m_drive_to_ordering_0 23, m_unload_ordering_0 24
	* 1.1 get_to truck_0 city_loc_11 -> m_i_am_there_ordering_0 (precondition met, noop)
	* 1.2 load truck_0 city_loc_11 package_0 -> m_load_ordering_0 22
	* 1.3 get_to truck_0 city_loc_2 -> m_drive_to_ordering_0 23
	* 1.4 unload truck_0 city_loc_2 package_0 -> m_unload_ordering_0 24
2 deliver package_1 city_loc_13 -> m_drive_to_via_ordering_0 6 7, m_load_ordering_0 6, m_drive_to_via_ordering_0 7 8, m_unload_ordering_0 8
	* 2.1 get_to truck_0 city_loc_3 -> m_drive_to_ordering_0 1
	* 2.2 load truck_0 city_loc_3 package_1 -> m_load_ordering_0 6
	* 2.3 get_to truck_0 city_loc_1 -> m_drive_to_via_ordering_0 7
	* 2.4 unload truck_0 city_loc_1 package_1 -> m_unload_ordering_0 8
3 deliver package_2 city_loc_2 -> m_drive_to_ordering_0 1, m_load_ordering_0 2, m_drive_to_ordering_0 3, m_unload_ordering_0 4
	* (similar decomposition as task 1)
4 deliver package_3 city_loc_13 -> m_drive_to_ordering_0 17, m_load_ordering_0 18, m_drive_to_ordering_0 19, m_unload_ordering_0 20
	* 4.1 get_to truck_1 city_loc_4 -> m_drive_to_ordering_0 17
	* 4.2 load truck_1 city_loc_4 package_3 -> m_load_ordering_0 18
	* 4.3 get_to truck_1 city_loc_13 -> m_drive_to_ordering_0 19
	* 4.4 unload truck_1 city_loc_13 package_3 -> m_unload_ordering_0 20
5 deliver package_4 city_loc_1 -> m_drive_to_ordering_0 9, m_load_ordering_0 10, m_drive_to_ordering_0 11, m_unload_ordering_0 12
	* (similar decomposition as task 1)
6 deliver package_5 city_loc_1 -> m_drive_to_ordering_0 13, m_load_ordering_0 14, m_drive_to_ordering_0 15, m_unload_ordering_0 16
	* (similar decomposition as task 1)
<==