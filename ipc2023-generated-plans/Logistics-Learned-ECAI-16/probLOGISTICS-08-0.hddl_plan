Based on the HTN domain and problem you provided, here's a plan that solves the problem using a hierarchical task network (HTN) planner:

==>
1 drive_truck tru1 pos1 pos3 cit1
2 i_lock_at tru1 pos1
3 load_truck obj11 tru1 pos1
4 i_unlock_at tru1 pos1
5 drive_truck tru1 pos3 pos1 cit1
6 unload_truck obj11 tru1 pos3
7 i_lock_at tru1 pos1
8 load_truck obj12 tru1 pos1
9 i_unlock_at tru1 pos1
10 drive_truck tru1 pos1 pos2 cit1
11 unload_truck obj12 tru1 pos2
12 drive_truck tru1 pos2 pos1 cit1
13 load_truck obj13 tru1 pos1
14 i_unlock_at tru1 pos1
15 drive_truck tru1 pos1 pos2 cit1
16 unload_truck obj13 tru1 pos2
17 fly_airplane apn1 apt1 apt3
18 load_airplane obj31 apn1 apt1
19 fly_airplane apn1 apt3 apt2
20 unload_airplane obj31 apn1 apt3
21 load_airplane obj23 apn1 apt3
22 fly_airplane apn1 apt3 apt2
23 unload_airplane obj23 apn1 apt2
24 load_airplane obj32 apn1 apt2
25 fly_airplane apn1 apt2 apt2
26 unload_airplane obj32 apn1 apt1
27 drive_truck tru2 pos2 pos3 cit2
28 load_truck obj21 tru2 pos2
29 drive_truck tru2 pos3 pos2 cit2
30 unload_truck obj21 tru2 pos3
31 load_truck obj22 tru2 pos2
32 drive_truck tru2 pos2 pos3 cit2
33 unload_truck obj22 tru2 pos3
<==

root 0
0 achieve_at OBJ11 POS3 -> M4-DO-AT-LOAD-TRUCK0 1 3 4 5 6 
achieve_at OBJ21 POS2 -> M6-DO-IN-UNLOAD-TRUCK0 7 8 9 10 11 
achieve_at OBJ31 APT3 -> M5-DO-AT-LOAD-AIRPLANE0 12 17 18 19 20 
achieve_at OBJ22 POS3 -> M4-DO-AT-LOAD-TRUCK0 21 22 25 26 27 
achieve_at OBJ12 POS1 -> M6-DO-IN-UNLOAD-TRUCK0 28 30 31 32 33 
achieve_at OBJ23 APT2 -> M5-DO-AT-LOAD-AIRPLANE0 14 15 20 21 24 
achieve_at OBJ13 APT2 -> M5-DO-AT-LOAD-AIRPLANE0 13 16 19 20 23 
achieve_at OBJ32 APT1 -> M5-DO-AT-LOAD-AIRPLANE0 24 25 26